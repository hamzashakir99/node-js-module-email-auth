router
    .post(
        '/users/auth/check/user_name',
        dataValidator.username.userNamePayloadValidation,
        middleware.validation.request,
        actions["users"].auth.checkUserName
    )
    .post(
        '/users/auth/login',
        dataValidator.login.loginPayloadValidation,
        middleware.validation.request,
        actions["users"].auth.login
    )
    .post(
        '/users/logout',
        actions["users"].auth.logout
    )
    .post(
        '/users/auth/register',
        dataValidator.email.emailPayloadValidation,
        middleware.validation.request,
        dataValidator.password.passwordPayloadValidation,
        middleware.validation.request,
        actions["users"].auth.register
    )
    .post(
        '/users/auth/send-code',
        dataValidator.email.emailPayloadValidation,
        middleware.validation.request,
        actions["users"].auth.sendCode
    )
    .post(
        '/users/login/two-factor/code',
        actions["users"].auth.sendTwoFactorCode
    )
    .post(
        '/users/login/two-factor/verify',
        actions["users"].auth.verifyTwoFactorAuthentication
    )
    .post(
        '/users/auth/reset-password',
        dataValidator.email.emailPayloadValidation,
        middleware.validation.request,
        dataValidator.password.passwordPayloadValidation,
        middleware.validation.request,
        actions["users"].auth.resetPassword
    )
    .post(
        '/users/auth/verify/email',
        dataValidator.email.emailPayloadValidation,
        middleware.validation.request,
        actions["users"].auth.verifyEmail
    )
    .post(
        '/users/change/password',
        dataValidator.password.passwordPayloadValidation,
        middleware.validation.request,
        middleware.users.status,
        actions["users"].auth.changePassword
    )
    .get(
        '/users/profile',
        middleware.users.status,
        actions["users"].list.getProfile
    )
module.exports = router;